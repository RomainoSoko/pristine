@import "~@/styles/functions.scss";
@import "~@config/theme.scss";

$states: (
        primary: (
                color: white,
                background-color: theme($theme, colors, teal)
        ),
        secondary: (
                color: white,
                background-color: theme($theme, colors, blue)
        ),
        success: (
                color: white,
                background-color: theme($theme, colors, green)
        ),
        danger: (
                color: white,
                background-color: theme($theme, colors, red)
        ),
        warning: (
                color: white,
                background-color: theme($theme, colors, orange)
        ),
  //transparent: transparent
);
@mixin unit-style($class-name, $function) {
  height: theme($theme, ui, unit, base);

  // Padding -----------------------------------------------------------------------------------------------------------
  @apply pr-px-base;

  // Font --------------------------------------------------------------------------------------------------------------
  @apply pr-text-font-color pr-bg-white;

  // Borders -----------------------------------------------------------------------------------------------------------
  @apply pr-rounded-base pr-border-solid pr-border pr-border-grey-light;

  // Shadows -----------------------------------------------------------------------------------------------------------
  //@apply pr-shadow;

  // Styling -----------------------------------------------------------------------------------------------------------
  @apply pr-bg-white;

  // Specificities -----------------------------------------------------------------------------------------------------
  @if $function == 'clickable' {
    @apply pr-cursor-pointer;
  }

  // Native states
  &:hover {
    @apply pr-border-grey;
  }

  // Replace focus outline
  &:focus {
    @apply pr-border-grey pr-bg-grey-lightest pr-outline-none;
  }

  @if $function == 'clickable' {
    &:active {
      @apply pr-border-grey pr-bg-grey-light;
    }
  }

  // Class states
  @each $state, $state-val in $states {
    &.#{$class-name}--#{$state} {
      color: map-get($state-val, color);
      background-color: map-get($state-val, background-color);
      border-color: map-get($state-val, background-color);
      // Native states
      &:hover {
        border-color: darken(map-get($state-val, background-color), 5%);
        @if $function == 'clickable' {
          background-color: darken(map-get($state-val, background-color), 5%);
        }
      }

      // Replace focus outline
      &:focus {
        border-color: darken(map-get($state-val, background-color), 10%);
        @if $function == 'clickable' {
          background-color: darken(map-get($state-val, background-color), 10%);
        }
      }

      @if $function == 'clickable' {
        &:active {
          border-color: darken(map-get($state-val, background-color), 15%);
          background-color: darken(map-get($state-val, background-color), 15%);
        }
      }
    }
  }
}